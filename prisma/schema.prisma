generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  boards        Board[]
}

model Board {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  columns   Column[]
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
}

model Column {
  id      Int    @id @default(autoincrement())
  name    String
  Board   Board? @relation(fields: [boardId], references: [id])
  Tasks   Task[]
  boardId Int?

  @@unique([boardId, name])
}

model Task {
  id       Int       @id @default(autoincrement())
  name     String
  SubTasks SubTask[]
  Column   Column?   @relation(fields: [columnId], references: [id])
  columnId Int?

  @@unique([columnId, name])
}

model SubTask {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  status    Boolean
  boardId   Int?
  Task      Task?    @relation(fields: [taskId], references: [id])
  taskId    Int?

  @@unique([taskId, name])
}
